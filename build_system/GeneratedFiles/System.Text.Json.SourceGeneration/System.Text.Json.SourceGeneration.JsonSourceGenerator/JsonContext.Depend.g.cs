// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace SB.Core
{
    internal partial class JsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.Depend>? _Depend;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.Depend> Depend
        #nullable enable annotations
        {
            get => _Depend ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.Depend>)Options.GetTypeInfo(typeof(global::SB.Core.Depend));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.Depend> Create_Depend(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::SB.Core.Depend>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.Depend> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::SB.Core.Depend>
                {
                    ObjectCreator = () => new global::SB.Core.Depend(),
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => DependPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    ConstructorAttributeProviderFactory = static () => typeof(global::SB.Core.Depend).GetConstructor(InstanceMemberBindingFlags, binder: null, global::System.Array.Empty<global::System.Type>(), modifiers: null),
                    SerializeHandler = DependSerializeHandler,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::SB.Core.Depend>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] DependPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[1];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.List<string>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::SB.Core.Depend),
                Converter = null,
                Getter = static obj => ((global::SB.Core.Depend)obj).ExternalFiles,
                Setter = static (obj, value) => global::System.Runtime.CompilerServices.Unsafe.Unbox<global::SB.Core.Depend>(obj).ExternalFiles = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ExternalFiles",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::SB.Core.Depend).GetProperty("ExternalFiles", InstanceMemberBindingFlags, null, typeof(global::System.Collections.Generic.List<string>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.List<string>>(options, info0);
            properties[0].IsGetNullable = false;
            properties[0].IsSetNullable = false;

            return properties;
        }

        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
        private void DependSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::SB.Core.Depend value)
        {
            writer.WriteStartObject();

            writer.WritePropertyName(PropName_ExternalFiles);
            ListStringSerializeHandler(writer, ((global::SB.Core.Depend)value).ExternalFiles);

            writer.WriteEndObject();
        }
    }
}
