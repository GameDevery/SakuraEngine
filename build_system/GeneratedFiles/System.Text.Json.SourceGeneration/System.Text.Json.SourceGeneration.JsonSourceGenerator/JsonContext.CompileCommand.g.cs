// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace SB.Core
{
    internal partial class JsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CompileCommand>? _CompileCommand;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CompileCommand> CompileCommand
        #nullable enable annotations
        {
            get => _CompileCommand ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CompileCommand>)Options.GetTypeInfo(typeof(global::SB.Core.CompileCommand));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CompileCommand> Create_CompileCommand(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::SB.Core.CompileCommand>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CompileCommand> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::SB.Core.CompileCommand>
                {
                    ObjectCreator = null,
                    ObjectWithParameterizedConstructorCreator = static args => new global::SB.Core.CompileCommand(){ directory = (string)args[0], arguments = (global::System.Collections.Generic.List<string>)args[1], file = (string)args[2] },
                    PropertyMetadataInitializer = _ => CompileCommandPropInit(options),
                    ConstructorParameterMetadataInitializer = CompileCommandCtorParamInit,
                    ConstructorAttributeProviderFactory = static () => typeof(global::SB.Core.CompileCommand).GetConstructor(InstanceMemberBindingFlags, binder: null, global::System.Array.Empty<global::System.Type>(), modifiers: null),
                    SerializeHandler = CompileCommandSerializeHandler,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::SB.Core.CompileCommand>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] CompileCommandPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[3];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::SB.Core.CompileCommand),
                Converter = null,
                Getter = static obj => ((global::SB.Core.CompileCommand)obj).directory,
                Setter = static (obj, value) => throw new global::System.InvalidOperationException("Setting init-only properties is not supported in source generation mode."),
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "directory",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::SB.Core.CompileCommand).GetProperty("directory", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info0);
            properties[0].IsGetNullable = false;
            properties[0].IsSetNullable = false;

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.List<string>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::SB.Core.CompileCommand),
                Converter = null,
                Getter = static obj => ((global::SB.Core.CompileCommand)obj).arguments,
                Setter = static (obj, value) => throw new global::System.InvalidOperationException("Setting init-only properties is not supported in source generation mode."),
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "arguments",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::SB.Core.CompileCommand).GetProperty("arguments", InstanceMemberBindingFlags, null, typeof(global::System.Collections.Generic.List<string>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.List<string>>(options, info1);
            properties[1].IsGetNullable = false;
            properties[1].IsSetNullable = false;

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::SB.Core.CompileCommand),
                Converter = null,
                Getter = static obj => ((global::SB.Core.CompileCommand)obj).@file,
                Setter = static (obj, value) => throw new global::System.InvalidOperationException("Setting init-only properties is not supported in source generation mode."),
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "file",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::SB.Core.CompileCommand).GetProperty("file", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info2);
            properties[2].IsGetNullable = false;
            properties[2].IsSetNullable = false;

            return properties;
        }

        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
        private void CompileCommandSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::SB.Core.CompileCommand value)
        {
            writer.WriteStartObject();

            writer.WriteString(PropName_directory, ((global::SB.Core.CompileCommand)value).directory);
            writer.WritePropertyName(PropName_arguments);
            ListStringSerializeHandler(writer, ((global::SB.Core.CompileCommand)value).arguments);
            writer.WriteString(PropName_file, ((global::SB.Core.CompileCommand)value).@file);

            writer.WriteEndObject();
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[] CompileCommandCtorParamInit() => new global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[]
        {
            new()
            {
                Name = "directory",
                ParameterType = typeof(string),
                Position = 0,
                IsNullable = false,
                IsMemberInitializer = true,
            },

            new()
            {
                Name = "arguments",
                ParameterType = typeof(global::System.Collections.Generic.List<string>),
                Position = 1,
                IsNullable = false,
                IsMemberInitializer = true,
            },

            new()
            {
                Name = "file",
                ParameterType = typeof(string),
                Position = 2,
                IsNullable = false,
                IsMemberInitializer = true,
            },
        };
    }
}
