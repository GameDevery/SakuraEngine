// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace SB.Core
{
    internal partial class JsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CLDependenciesData>? _CLDependenciesData;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CLDependenciesData> CLDependenciesData
        #nullable enable annotations
        {
            get => _CLDependenciesData ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CLDependenciesData>)Options.GetTypeInfo(typeof(global::SB.Core.CLDependenciesData));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CLDependenciesData> Create_CLDependenciesData(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::SB.Core.CLDependenciesData>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::SB.Core.CLDependenciesData> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::SB.Core.CLDependenciesData>
                {
                    ObjectCreator = () => new global::SB.Core.CLDependenciesData(),
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => CLDependenciesDataPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    ConstructorAttributeProviderFactory = static () => typeof(global::SB.Core.CLDependenciesData).GetConstructor(InstanceMemberBindingFlags, binder: null, global::System.Array.Empty<global::System.Type>(), modifiers: null),
                    SerializeHandler = CLDependenciesDataSerializeHandler,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::SB.Core.CLDependenciesData>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] CLDependenciesDataPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[5];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::SB.Core.CLDependenciesData),
                Converter = null,
                Getter = static obj => ((global::SB.Core.CLDependenciesData)obj).Source,
                Setter = static (obj, value) => global::System.Runtime.CompilerServices.Unsafe.Unbox<global::SB.Core.CLDependenciesData>(obj).Source = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Source",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::SB.Core.CLDependenciesData).GetProperty("Source", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info0);
            properties[0].IsGetNullable = false;
            properties[0].IsSetNullable = false;

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::SB.Core.CLDependenciesData),
                Converter = null,
                Getter = static obj => ((global::SB.Core.CLDependenciesData)obj).ProvidedModule,
                Setter = static (obj, value) => global::System.Runtime.CompilerServices.Unsafe.Unbox<global::SB.Core.CLDependenciesData>(obj).ProvidedModule = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ProvidedModule",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::SB.Core.CLDependenciesData).GetProperty("ProvidedModule", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info1);
            properties[1].IsGetNullable = false;
            properties[1].IsSetNullable = false;

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string[]>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::SB.Core.CLDependenciesData),
                Converter = null,
                Getter = static obj => ((global::SB.Core.CLDependenciesData)obj).Includes,
                Setter = static (obj, value) => global::System.Runtime.CompilerServices.Unsafe.Unbox<global::SB.Core.CLDependenciesData>(obj).Includes = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Includes",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::SB.Core.CLDependenciesData).GetProperty("Includes", InstanceMemberBindingFlags, null, typeof(string[]), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string[]>(options, info2);
            properties[2].IsGetNullable = false;
            properties[2].IsSetNullable = false;

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string[]>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::SB.Core.CLDependenciesData),
                Converter = null,
                Getter = static obj => ((global::SB.Core.CLDependenciesData)obj).ImportedModules,
                Setter = static (obj, value) => global::System.Runtime.CompilerServices.Unsafe.Unbox<global::SB.Core.CLDependenciesData>(obj).ImportedModules = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ImportedModules",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::SB.Core.CLDependenciesData).GetProperty("ImportedModules", InstanceMemberBindingFlags, null, typeof(string[]), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string[]>(options, info3);
            properties[3].IsGetNullable = false;
            properties[3].IsSetNullable = false;

            var info4 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string[]>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::SB.Core.CLDependenciesData),
                Converter = null,
                Getter = static obj => ((global::SB.Core.CLDependenciesData)obj).ImportedHeaderUnits,
                Setter = static (obj, value) => global::System.Runtime.CompilerServices.Unsafe.Unbox<global::SB.Core.CLDependenciesData>(obj).ImportedHeaderUnits = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ImportedHeaderUnits",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::SB.Core.CLDependenciesData).GetProperty("ImportedHeaderUnits", InstanceMemberBindingFlags, null, typeof(string[]), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[4] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string[]>(options, info4);
            properties[4].IsGetNullable = false;
            properties[4].IsSetNullable = false;

            return properties;
        }

        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
        private void CLDependenciesDataSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::SB.Core.CLDependenciesData value)
        {
            writer.WriteStartObject();

            writer.WriteString(PropName_Source, ((global::SB.Core.CLDependenciesData)value).Source);
            writer.WriteString(PropName_ProvidedModule, ((global::SB.Core.CLDependenciesData)value).ProvidedModule);
            writer.WritePropertyName(PropName_Includes);
            StringArraySerializeHandler(writer, ((global::SB.Core.CLDependenciesData)value).Includes);
            writer.WritePropertyName(PropName_ImportedModules);
            StringArraySerializeHandler(writer, ((global::SB.Core.CLDependenciesData)value).ImportedModules);
            writer.WritePropertyName(PropName_ImportedHeaderUnits);
            StringArraySerializeHandler(writer, ((global::SB.Core.CLDependenciesData)value).ImportedHeaderUnits);

            writer.WriteEndObject();
        }
    }
}
