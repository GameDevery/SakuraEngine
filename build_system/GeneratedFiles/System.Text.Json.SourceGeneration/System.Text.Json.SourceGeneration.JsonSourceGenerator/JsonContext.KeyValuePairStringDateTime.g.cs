// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace SB.Core
{
    internal partial class JsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>>? _KeyValuePairStringDateTime;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>> KeyValuePairStringDateTime
        #nullable enable annotations
        {
            get => _KeyValuePairStringDateTime ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>>)Options.GetTypeInfo(typeof(global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>> Create_KeyValuePairStringDateTime(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>>
                {
                    ObjectCreator = null,
                    ObjectWithParameterizedConstructorCreator = static args => new global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>((string)args[0], (global::System.DateTime)args[1]),
                    PropertyMetadataInitializer = _ => KeyValuePairStringDateTimePropInit(options),
                    ConstructorParameterMetadataInitializer = KeyValuePairStringDateTimeCtorParamInit,
                    ConstructorAttributeProviderFactory = static () => typeof(global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>).GetConstructor(InstanceMemberBindingFlags, binder: null, new[] {typeof(string), typeof(global::System.DateTime)}, modifiers: null),
                    SerializeHandler = KeyValuePairStringDateTimeSerializeHandler,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] KeyValuePairStringDateTimePropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[2];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>),
                Converter = null,
                Getter = static obj => ((global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>)obj).Key,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Key",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>).GetProperty("Key", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>),
                Converter = null,
                Getter = static obj => ((global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>)obj).Value,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Value",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>).GetProperty("Value", InstanceMemberBindingFlags, null, typeof(global::System.DateTime), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime>(options, info1);

            return properties;
        }

        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
        private void KeyValuePairStringDateTimeSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime> value)
        {
            writer.WriteStartObject();

            writer.WriteString(PropName_Key, ((global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>)value).Key);
            writer.WriteString(PropName_Value, ((global::System.Collections.Generic.KeyValuePair<string, global::System.DateTime>)value).Value);

            writer.WriteEndObject();
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[] KeyValuePairStringDateTimeCtorParamInit() => new global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[]
        {
            new()
            {
                Name = "key",
                ParameterType = typeof(string),
                Position = 0,
                HasDefaultValue = false,
                DefaultValue = null,
                IsNullable = true,
            },

            new()
            {
                Name = "value",
                ParameterType = typeof(global::System.DateTime),
                Position = 1,
                HasDefaultValue = false,
                DefaultValue = null,
                IsNullable = false,
            },
        };
    }
}
