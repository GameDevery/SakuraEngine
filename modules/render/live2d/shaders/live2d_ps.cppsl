#include "live2d_cb.hppsl"
#include <std2/sampler.hpp>

struct [[stage_inout]] VSOut
{
    float4 clip_pos;
    float2 uv;
};

[[binding(0, 0)]]
extern SampleImage& color_texture;
[[binding(1, 0)]]
extern SampleImage& mask_texture;
[[binding(0, 1)]]
extern Sampler& color_sampler;

[[fragment_shader("fragment_shader")]]
void fragment(VSOut input, [[render_target(0)]] float4& output_color)
{
    float4 tex_color = color_sampler.Sample(color_texture, input.uv);
    tex_color.rgb = tex_color.rgb * push_constants.multiply_color.rgb;
    const float3 _a = tex_color.rgb + push_constants.screen_color.rgb; 
    const float3 _m = tex_color.rgb * push_constants.screen_color.rgb; 
    tex_color.rgb = _a - _m;
    output_color = tex_color * push_constants.base_color;
    output_color.xyz *= output_color.w;

    if (push_constants.use_mask)
    {
        float2 mask_uv = input.clip_pos.xy / input.clip_pos.w;
        
        float4 clip_mask = (float4(1.f, 1.f, 1.f, 1.f) - color_sampler.Sample(mask_texture, mask_uv)) * push_constants.channel_flag;
        float mask_value = clip_mask.r + clip_mask.g + clip_mask.b + clip_mask.a;
        output_color = output_color * mask_value;
    }
}