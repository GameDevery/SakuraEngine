//! *************************************************************************
//! **  This file is auto-generated by gen_math, do not edit it manually.  **
//! *************************************************************************

#pragma once
#include <SkrBase/config.h>
// float vector, component: float
typedef struct skr_float2_t{
    float x, y;
} skr_float2_t;
typedef struct skr_float3_t{
    float x, y, z;
} skr_float3_t;
typedef struct alignas(16) skr_float4_t{
    float x, y, z, w;
} skr_float4_t;

// double vector, component: double
typedef struct skr_double2_t{
    double x, y;
} skr_double2_t;
typedef struct skr_double3_t{
    double x, y, z;
} skr_double3_t;
typedef struct alignas(16) skr_double4_t{
    double x, y, z, w;
} skr_double4_t;

// bool vector, component: bool
typedef struct skr_bool2_t{
    bool x, y;
} skr_bool2_t;
typedef struct skr_bool3_t{
    bool x, y, z;
} skr_bool3_t;
typedef struct skr_bool4_t{
    bool x, y, z, w;
} skr_bool4_t;

// int vector, component: int32_t
typedef struct skr_int2_t{
    int32_t x, y;
} skr_int2_t;
typedef struct skr_int3_t{
    int32_t x, y, z;
} skr_int3_t;
typedef struct skr_int4_t{
    int32_t x, y, z, w;
} skr_int4_t;

// uint vector, component: uint32_t
typedef struct skr_uint2_t{
    uint32_t x, y;
} skr_uint2_t;
typedef struct skr_uint3_t{
    uint32_t x, y, z;
} skr_uint3_t;
typedef struct skr_uint4_t{
    uint32_t x, y, z, w;
} skr_uint4_t;

// long vector, component: int64_t
typedef struct skr_long2_t{
    int64_t x, y;
} skr_long2_t;
typedef struct skr_long3_t{
    int64_t x, y, z;
} skr_long3_t;
typedef struct skr_long4_t{
    int64_t x, y, z, w;
} skr_long4_t;

// ulong vector, component: uint64_t
typedef struct skr_ulong2_t{
    uint64_t x, y;
} skr_ulong2_t;
typedef struct skr_ulong3_t{
    uint64_t x, y, z;
} skr_ulong3_t;
typedef struct skr_ulong4_t{
    uint64_t x, y, z, w;
} skr_ulong4_t;

// float matrix, component: float
typedef struct float3x3_t {
    skr_float3_t axis_x, axis_y, axis_z;
} float3x3_t;
typedef struct alignas(16) float4x4_t {
    skr_float4_t axis_x, axis_y, axis_z, axis_w;
} float4x4_t;

// double matrix, component: double
typedef struct double3x3_t {
    skr_double3_t axis_x, axis_y, axis_z;
} double3x3_t;
typedef struct alignas(16) double4x4_t {
    skr_double4_t axis_x, axis_y, axis_z, axis_w;
} double4x4_t;

// quaternion
typedef struct alignas(16) skr_quat_f_t {
    float x, y, z, w;
} skr_quat_f_t;
typedef struct alignas(16) skr_quat_d_t {
    double x, y, z, w;
} skr_quat_d_t;

// rotator
typedef struct skr_rotator_f_t {
    float pitch, yaw, roll;
} skr_rotator_f_t;
typedef struct skr_rotator_d_t {
    double pitch, yaw, roll;
} skr_rotator_d_t;

// transform
typedef struct skr_transform_f_t {
    skr_quat_f_t rotation;
    skr_float3_t position;
    skr_float3_t scale;
} skr_transform_f_t;
typedef struct skr_transform_d_t {
    skr_quat_d_t rotation;
    skr_double3_t position;
    skr_double3_t scale;
} skr_transform_d_t;

// camera

