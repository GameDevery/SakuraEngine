//! *************************************************************************
//! **  This file is auto-generated by gen_math, do not edit it manually.  **
//! *************************************************************************

#pragma once
#include <cstdint>
#include <cmath>
#include "../gen_math_fwd.hpp"
#include <SkrBase/misc/debug.h>
#include <SkrBase/misc/hash.hpp>

namespace skr {
struct Quatf {
    float x, y, z, w;
    
    // ctor & dtor
    inline Quatf() : x(0), y(0), z(0), w(1) {}
    inline Quatf(float x, float y, float z, float w) : x(x), y(y), z(z), w(w) {}
    inline ~Quatf() = default;
    
    // factory
    inline static Quatf Identity() { return { 0, 0, 0, 1 }; }
    inline static Quatf Fill(float v) { return { v, v, v, v }; }
    
    // copy & move & assign & move assign
    inline Quatf(Quatf const&) = default;
    inline Quatf(Quatf&&) = default;
    inline Quatf& operator=(Quatf const&) = default;
    inline Quatf& operator=(Quatf&&) = default;
};
struct Quatd {
    double x, y, z, w;
    
    // ctor & dtor
    inline Quatd() : x(0), y(0), z(0), w(1) {}
    inline Quatd(double x, double y, double z, double w) : x(x), y(y), z(z), w(w) {}
    inline ~Quatd() = default;
    
    // factory
    inline static Quatd Identity() { return { 0, 0, 0, 1 }; }
    inline static Quatd Fill(double v) { return { v, v, v, v }; }
    
    // copy & move & assign & move assign
    inline Quatd(Quatd const&) = default;
    inline Quatd(Quatd&&) = default;
    inline Quatd& operator=(Quatd const&) = default;
    inline Quatd& operator=(Quatd&&) = default;
};
}
