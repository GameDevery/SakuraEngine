//! *************************************************************************
//! **  This file is auto-generated by gen_math, do not edit it manually.  **
//! *************************************************************************

#pragma once
#include <cstdint>
#include <cmath>
#include "../gen_math_fwd.hpp"
#include <SkrBase/misc/debug.h>
#include <SkrBase/misc/hash.hpp>

namespace skr {
struct QuatF {
    float x, y, z, w;
    
    // ctor & dtor
    inline QuatF() : x(0), y(0), z(0), w(1) {}
    inline QuatF(float x, float y, float z, float w) : x(x), y(y), z(z), w(w) {}
    inline ~QuatF() = default;
    
    // factory
    inline static QuatF Identity() { return { 0, 0, 0, 1 }; }
    inline static QuatF Fill(float v) { return { v, v, v, v }; }
    
    // copy & move & assign & move assign
    inline QuatF(QuatF const&) = default;
    inline QuatF(QuatF&&) = default;
    inline QuatF& operator=(QuatF const&) = default;
    inline QuatF& operator=(QuatF&&) = default;
};
struct QuatD {
    double x, y, z, w;
    
    // ctor & dtor
    inline QuatD() : x(0), y(0), z(0), w(1) {}
    inline QuatD(double x, double y, double z, double w) : x(x), y(y), z(z), w(w) {}
    inline ~QuatD() = default;
    
    // factory
    inline static QuatD Identity() { return { 0, 0, 0, 1 }; }
    inline static QuatD Fill(double v) { return { v, v, v, v }; }
    
    // copy & move & assign & move assign
    inline QuatD(QuatD const&) = default;
    inline QuatD(QuatD&&) = default;
    inline QuatD& operator=(QuatD const&) = default;
    inline QuatD& operator=(QuatD&&) = default;
};
}
