#include "std/types/vec.hpp"
#include <std/std.hpp>
#include <std2/constant_buffer.hpp>
#include <std2/sampler.hpp>

using namespace skr::shader;

struct Constants
{
    float4x4 mvp_matrix;
};

[[push_constant]]
extern ConstantBuffer<Constants>& push_constants;

struct [[stage_inout]] VSIn
{
    float3 pos;
};

struct [[stage_inout]] VSOut
{
};

[[vertex_shader("debug_vs")]]
VSOut vertex(VSIn input, [[sv_position]] float4& sv_pos)
{
    VSOut output;
    sv_pos = float4(input.pos, 1.0f) * push_constants.mvp_matrix;
    return output;
}

[[fragment_shader("debug_fs")]]
void model_fs(VSOut input, [[sv_render_target(0)]] float4& sv_color)
{
    sv_color = float4(1.0f, 0.0f, 0.0f, 1.0f); // Red color for debugging
}
