#!/bin/sh

# Pre-push hook to block pushing sensitive directories to GitHub
# This hook is permanent and will work across all platforms

# Read protected directories from config file
CONFIG_FILE=".github-protected-dirs"
if [ -f "$CONFIG_FILE" ]; then
    PROTECTED_DIRS=$(grep -v '^#' "$CONFIG_FILE" | grep -v '^$' | tr '\n' ' ')
else
    # Fallback if config file doesn't exist
    PROTECTED_DIRS="path/to/secret/directory another/private/dir internal/tools"
fi

remote="$1"
url="$2"

# Check if pushing to GitHub
case "$url" in
    *github.com*)
        # Check if environment variable to skip check is set
        if [ "$SKIP_GITHUB_CHECK" = "1" ]; then
            exit 0
        fi
        
        # Read the commits being pushed
        while read local_ref local_sha remote_ref remote_sha
        do
            # Skip deleted branches
            if [ "$local_sha" = "0000000000000000000000000000000000000000" ]; then
                continue
            fi
            
            # Determine commit range
            if [ "$remote_sha" = "0000000000000000000000000000000000000000" ]; then
                # New branch - check all commits
                range="$local_sha"
            else
                # Existing branch - check new commits
                range="$remote_sha..$local_sha"
            fi
            
            # Check each protected directory
            for dir in $PROTECTED_DIRS; do
                # Check if any commits touch the protected directory
                if git diff --name-only $range 2>/dev/null | grep -q "^$dir"; then
                    echo "❌ ERROR: Attempting to push changes to protected directory: $dir"
                    echo ""
                    echo "This push to GitHub has been blocked because it contains"
                    echo "changes to directories that should not be on GitHub."
                    echo ""
                    echo "To push to GitLab instead:"
                    echo "  git push gitlab $local_ref"
                    echo ""
                    echo "To override (NOT RECOMMENDED):"
                    echo "  SKIP_GITHUB_CHECK=1 git push github ..."
                    exit 1
                fi
                
                # Also check if directory exists in the tree
                if git ls-tree -r $local_sha --name-only 2>/dev/null | grep -q "^$dir/"; then
                    echo "❌ ERROR: Protected directory exists: $dir"
                    echo ""
                    echo "Cannot push to GitHub - the branch contains protected directories."
                    echo "Please use GitLab for branches with sensitive content."
                    exit 1
                fi
            done
        done
        ;;
esac

exit 0